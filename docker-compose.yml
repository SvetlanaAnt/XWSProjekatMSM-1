version: "3.7"
services:

  eureka-serviceregistry:
    image: eureka-serviceregistry
    container_name: eureka-serviceregistry
    build: 
      context: ./eureka
      dockerfile: Dockerfile
    tty: true
    networks:
      - static-network
    ports:
      - "8761:8761"

  authentication-service:
    image: authentication-service
    container_name: authentication-service
    build: 
      context: ./Services/authentication-service
      dockerfile: Dockerfile
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8084:8084"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: auth_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on: 
      - eureka-serviceregistry
      - mysql
      
  message-service:
    image: message-service
    container_name: message-service
    build: 
      context: ./Services/message-service
      dockerfile: Dockerfile
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8091:8091"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: msg_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on: 
      - eureka-serviceregistry
      - mysql

  ad-service:
    image: ad-service
    container_name: ad-service
    build:
      context: ./Services/ad-service
      dockerfile: Dockerfile
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8086:8086"
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: ad_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - eureka-serviceregistry
      - mysql

  car-request-service:
    image: car-request-service
    container_name: car-request-service
    build:
      context: ./Services/car-request-service
      dockerfile: Dockerfile
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8090:8090"
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: carreq_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - eureka-serviceregistry
      - mysql


  price-list-and-discount-service:
    image: price-list-and-discount-service
    container_name: price-list-and-discount-service
    build:
      context: ./Services/price-list-and-discount-service
      dockerfile: Dockerfile
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8088:8088"
    environment:
      REGISTRY_HOST: eureka-serviceregistry
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: pad_db?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on:
      - eureka-serviceregistry
      - mysql

  zuul:
    image: zuul
    container_name: zuul
    build: 
      context: ./zuul
      dockerfile: Dockerfile
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    tty: true
    networks:
      - static-network
    ports:
      - "8082:8082"
    depends_on:
      - eureka-serviceregistry
      - authentication-service
      - message-service
      - ad-service
      - price-list-and-discount-service
      - car-request-service

  agent-app:
    image: agent-app
    container_name: agent-app
    build: 
      context: ./MonolitApp
      dockerfile: Dockerfile
    tty: true
    restart: on-failure
    networks:
      - static-network
    ports:
      - "8083:8083"
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: rent_a_car?createDatabaseIfNotExist=true&serverTimezone=UTC
    depends_on: 
      - mysql
  
  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: always
    networks:
      - static-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rent_a_car

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16